<!doctype html>
<html>
<head>
    <meta charset="utf-8" />
    <title>PeerCast</title>
    <link rel="stylesheet" type="text/css" href="http://necolas.github.io/normalize.css/1.1.2/normalize.css">
    <!-- <link rel='stylesheet' href='/css/bootstrap.min.css'/>
    <link rel='stylesheet' href='/css/bootstrap-responsive.min.css'/> -->
    <link rel='stylesheet' href='/css/style.css'/>
    <link href='http://fonts.googleapis.com/css?family=Oswald' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Merriweather:300,700' rel='stylesheet' type='text/css'>
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js"></script>
    <script src="http://cdn.peerjs.com/0.3/peer.min.js"></script>
</head>
<body>
<header>
    <h1><a href="/">PeerCast</a></h1>
    <ul>
        <li><a class='login' href="/create">Create a class</a></li>
        <li><a href="/join">Join Class</a></li>
    </ul>
</header>

<div id="hero">
    <h3>You have joined peer <em id='peer-id'><%= peer %></em></h3>

    <video id="their-video" autoplay></video>

</div>


<div id='footer'>
<footer>
    <a class='login' href="/create">Create a class</a>
    <p>Â© Made by <a href='http://www.yosriady.com' target='_blank'>Yos Riady</a> for Mozilla Science Lab</p>
</footer>
</div>

<script>

var peer = new Peer({key: '8l0ph78p5vcxr'});

peer.on('open', function(id) {
  console.log('My peer ID is: ' + id);
});

var destination_peer_id = $('#peer-id').html();
var conn = peer.connect(destination_peer_id);
var call;

peer.on('open', function() {
    console.log("Open");
});

peer.on('connection', function(conn) {
    console.log("A peer has connected!");
    console.log(conn);
});

peer.on('call', function(call) {
  console.log("The class is calling you!");
  console.log(call);

  call.answer(window.localStream);
  console.log("Answered call!");

  step3(call);
});

function step3 (call) {
      // Hang up on an existing call if present
      if (window.existingCall) {
        window.existingCall.close();
      }

      // Wait for stream on the call, then set peer video display
      call.on('stream', function(stream){
        $('#their-video').prop('src', URL.createObjectURL(stream));
      });

      window.existingCall = call;
}

</script>
</body>
</html>